import json from '../staff/data.json'
import Head from 'next/head';
import styles from '../styles/Home.module.css';
import React from 'react';
import RemoveFiltersBox from '../components/RemoveFiltersBox';
import Card from '../components/Card';

const data = json.data;
// console.log(data[0])
const getnNewsTopics = () => {
  const newsTopics = [];
  data.forEach(el => !newsTopics.includes(el.application) && newsTopics.push(el.application));
  return newsTopics.sort((a, b) => b.length - a.length);
}

export default function Home() {
  const newsTopicsList = React.useMemo(() => getnNewsTopics(), []);

  const [currentTopics, setCurrentTopics] = React.useState([]);
  const [currentNews, setCurrentNews] = React.useState([]);

  const [countNewsOnPage, setCountNewsOnPage] = React.useState(8);
  const [isShowAllNews, setIsShowAllNews] = React.useState(false);
  const [isMobile, setIsMobile] = React.useState(false);

  const removeFilters = () => {
    setCurrentTopics([]);
    setIsShowAllNews(false);
    setCountNewsOnPage(8);
  }

  React.useEffect(() => {
    window.innerWidth < 768 ? setIsMobile(true) : setIsMobile(false);

    // Emulation query string of a URL
    // const urlSearchParams = new URLSearchParams(window.location.search);
    // const params = Object.fromEntries(urlSearchParams.entries());
    const queryParams = Math.floor(Math.random() * (newsTopicsList.length));
    setCurrentTopics([newsTopicsList[queryParams]]);
  // eslint-disable-next-line react-hooks/exhaustive-deps
  }, []);

  React.useEffect(() => {
    currentTopics.length ?
    setCurrentNews(data.filter(news => currentTopics.includes(news.application)))
    :
    setCurrentNews(data);
  }, [currentTopics, currentTopics.length]);

  const handleFilterClick = (e, filterItem) => {
    const cheked = currentTopics.includes(filterItem);

    cheked ?
    setCurrentTopics(currentTopics.filter(topic => topic !== filterItem))
    :
    setCurrentTopics(prev => prev.concat([filterItem]));
    
  }

  const handleShowMoreButtonClick = () => {
    setCountNewsOnPage(currentNews.length);
    setIsShowAllNews(true);
  }

  const handleHideMoreButtonClick = () => {
    setCountNewsOnPage(8);
    setIsShowAllNews(false);
  }
  
  return (
    <div className={styles.layout}>
      <div className={styles.container}>
        <Head>
          <title>Create Next App</title>
          <meta name="description" content="Generated by create next app" />
          <link rel="icon" href="/favicon.ico" />
        </Head>

        <div className={styles.headline}>
          <h1>{`Заголовок(${currentNews.length})`}</h1>
        </div>

        <div className={styles.filters}>
          { newsTopicsList.map(filterItem => 
          <div 
            key={filterItem} 
            className={currentTopics.includes(filterItem) ? styles.filterItemCheked : styles.filterItemNotCheked} 
            onClick={(e) => handleFilterClick(e, filterItem)}
          >
            {filterItem}
          </div>) 
          }
        </div>

        <RemoveFiltersBox removeFilters={removeFilters} />

        <div className={styles.cards}>
          { 
            currentNews.map((el, indx) => indx < countNewsOnPage && 
            <Card 
              key={el.id} 
              news={el} 
            />
            ) 
          }
        </div>

        <div className={styles.showMore}>
          <button 
            onClick={!isShowAllNews ? handleShowMoreButtonClick : handleHideMoreButtonClick} 
            className={styles.showMoreButton}
          >
            {!isShowAllNews ? isMobile ? 'Показать еще' : 'Показать все' : 'Свернуть все'}
          </button>
        </div>

      </div>
    </div>
  )
}
